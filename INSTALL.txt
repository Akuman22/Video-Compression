1. Pre-conditions

Hardware 
RAM - System has been tested on a minimum of 8GB of RAM.
			
Operating System - System has been tested on Windows 10. Not tested on Linux.

Java 8 with JDK 1.8

The project has been built and tested using the Intellij IDE.

Android Phone / Simulater Android 5.1 or above. Tested hardware: Galaxy S8.

Android Studio 3. Tested system: Mac OS.


2. Supporting files

- Testing files are included in the project folder with different extensions - seq_pedestrian-*

- Catalano is used for Image Effects(Folder included)

- Examples of how to use the project

	To test out the features:
	 Try multiple file formats and see comparative compression ratios
	 Try different effects with different qualities.


- Testing Patterns
	The code includes unit tests for important methods. The unit tests were written using JUnit 4

	The following unit tests were developed for the project. To execute them, simply run the .java files in Intellij. All the passed and failed test cases will be printed:

	1) CrCbTest
	This tests the methods to convert between 4x4 subsampled and regular 8x8 chrominance matrices.

	2) As a system test, we record the following metrics:

	1) The time taken to encode the images and produce a single video.txt file. To pass, the time taken should be less than 5 minutes.
	2) The ratio of the size of thw video.txt file to the sum of the size of all the individual images. To pass, the ration should be less than 1.
	3) The playback speed in frames per second (fps). To pass, the playback speed should be greater than 10 fps.



3. Execution

   - Clone the repository from Bitbucket. Use the following command:

   $ git clone https://mzraghib@agile.bu.edu/bitbucket/scm/ec504-pr/ec504projectgroup1.git

   - Open the (Intellij) project 'Video_Encoder' and run the main method

   - TODO: steps through the GUI

   - this will output the file RESULT.zip

   - Now back on the GUI,  TODO: steps through the GUI


   - For the Android Client, TODO:
   
		- Set up
        	1.Install the newest version of Android Studio: https://developer.android.com/studio/index.html
            2.Download the "VideoPlayer" folder. This is the source code folder for the app.
            3.Open Android Studio, Choose open an existed project. Select "VideoPlayer.iml" in "VideoPlayer" folder and open it.
            4.The IDE would spend some time to update, please wait patiently. Download required SDK and tools.
        
        - Compile & Run
        	1. Make sure you have an Android phone that is in Developer Mode or open an android simulator through android studio.
            2. Click "Run". If build successfully, the application will automatically pop up.
            3. If build failed, try to read the error information, probably you are missing some tools and android studio will download them for you.
            4. If still not work, please don't be mad, things happen. Email one of our developers and we will provide step-by-step instruction, for free.
            5. If you want to generate Apk, see build-Build(APKs).
        
        - How to use
        	1. Choose the file you want to open in the main page of the app.
            2. DON"T open the file that is not a video generated by our own encoder. The program will quit without notice.
            3. The app will ask Storage R/W permission at the first launch. Make sure you grant the permission.
            4. If you missed the permission or want to turn off / turn on, go to your phone's setting menu(probably in Privacy setting).
            5. Click Play, a player interface will appear and the video starts automatically.
            6. Click the screen to pause / resume the video.
            7. An "FX" button will pop up when touch the screen, choose interesting effects as you want.
            
            Enjoy!
   

